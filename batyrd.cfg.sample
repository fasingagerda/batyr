# Configuration for the batyr server
#
# Syntax hints:
#    - valid values for boolean settings are yes,no,true,false,1,0
#    - multiline values are possible by starting the line after the key with a "+"


[MAIN]

# The number of worker threads to launch
#
# Optional
# Type: integer; must be > 1
# Default: 2
num_worker_threads = 4


# The time after which finished and failed jobs are removed
# As all jobs are kept in memory this time should not be set too
# high.
#
# The units are seconds
#
# Optional
# Type: integer; must be > 1; 
# Default: 600
max_age_done_jobs = 600


# Connection to the postgresql database
# A connection string containing all parameters needed to connect
# to the database. The syntax is described in the postgresql manual
# on
# http://www.postgresql.org/docs/9.2/static/libpq-connect.html#LIBPQ-PARAMKEYWORDS
#
# Mandatory
dsn = "dbname=batyr user=batyr password=batyr host=localhost"


# keep database connections open even when there are currently
# not jobs to handle
#
# Optional
# Type: boolean
# Default: yes
use_persistent_connections = yes


# Logging settings
[LOGGING]

# The loglevel of the application
#
# valid values are: "error", "warning", "information" and
# "debug", although "debug" may only be used with DEBUG
# builds
#
# Optional
# Default: "information"
loglevel = debug

# logfile
# If this setting is not set or empty, all log messages will be written to stdout
#
# Optional
# Default: <not set>
logfile = 


# Settings for the HTTP-Interface
[  HTTP  ]

# The port to listen on
#
# Optional
# Default: 9090
port = 9091

# Value for the Access-Control-Allow-Origin header to be send with the HTTP
# api for allowing cross site HTTP-requests from javascript clients.
#
# For more information see https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS
# 
# When empty the header will be omitted. To allow request from everywhere use "*"
#
# Optional
# Default: <not set>
access_control_allow_origin =


# the layer configurations
[LAYERS]

# Example layer. The name in the "[[" "]]" will be used as the unique
# indentifier for the layer.
[[africa]]

# enable/disable this layer. Each layer is enabled by default
#
# Optional
# Default: yes
enabled = true

# A optional description to show in the web interface
# has to be in one line
#
# Optional
# Default: empty
description = Countries of africa based on 
+ http://www.mapmakerdata.co.uk.s3-website-eu-west-1.amazonaws.com/library/stacks/Africa/index.htm

# The source the contents for tha layer should be pulled from
# This corresponds with the "datasource_name" parameter the ogrinfo utility uses. So
# ogrinfo might be used to test the value here for correctness
#
# Mandatory
source = testdata/shapes/Africa.shp

# the name of the layer in the datasource
# This corresponds with the "layer" parameter of the ogrinfo program
#
# Mandatory
source_layer = Africa

# The name of table the layers contents should be written to
# The schema has to be omitted here.
#
# Mandatory
target_table_name = africa

# The name of schema of the table referenced in target_table_name
#
# Mandatory
target_table_schema = test

# Allow features to be deleted during the pull.
# Features which are not part of the source will be removed from the target.
# This setting is always disabled when a filter is used
#
# Optional
# Type: boolean
# Default: no
allow_feature_deletion = yes

# Filter the features of the source by a criteria to pull only matching
# features in the db.
#
# The features might be further filtered by the "filter" parameter
# of a pull request
#
# Optional
# Type: Unquoted String. Attribute filter as described in the OGR documentation
#       at http://www.gdal.org/ogr/ogr_sql.html in the section of the
#       WHERE-clause
# Default: empty
# Example: myattribute=3
filter = 1 = 1

# Ignore features with attributes which can not be cast to the datatype
# of the table. The default behaviour is failing the whole pull when one
# single feature can not be casted.
#
# Optional
# Type: boolean
# Default: no
ignore_failures = no

# Override/set the primary key for the table of this layer.
#
# Optional. The normal behaviour would be analyzing the schema of the table to find
#           the column(s) of the primary key
# Type: comma-seperated list of column names
# Default: empty
primary_key_columns = id

# Enable/disable bulk mode. If bulk mode is enabled all records in the target table
# will be deleted or truncated (depending on corresponding option) and all records 
# from the source table will be copied to the target table. This can increase performance
# on large datasets.
#
# Optional. If is not set the default behaviour for pulling tables will be used. See 
# MANUAL.md file.
# Type: boolean
# Default: false
bulk_mode = true

# Which SQL command to use for the bulk mode (if bulk mode is turned on): DELETE or 
# TRUNCATE. 
# 
# Optional.
# Valid values are: "delete" and "truncate".
# Default: "delete".
bulk_delete_method = truncate

[[dataset1]]
description= testing different values

source = testdata/shapes/dataset1.shp
source_layer = dataset1
target_table_name = dataset1
target_table_schema = test
allow_feature_deletion = yes
